{% style %}
    .upsell__items-container {
        /* border: 1px solid #00000030; */
        margin-bottom: 10px;
        padding: 10px;
    }
    .upsell__items-container .upsell__title {
        text-align: center;
    }
    .upsell__item {
        display: flex;
        flex-direction: row;
        border: 1px solid #00000030;
        padding: 10px;
        margin: 5px;
        align-items: center;
        justify-content: space-between;
        position: relative;
    }
    .upsell__item .upsell__soldout {
        position: absolute;
        right: 0;
        top: 0;
        background-color: red;
        color: white;
        padding: 2px 6px;
    }
    .upsell__item .info__content {
        justify-self: flex-start;
        flex: 1;
    }
    .pdp__upsell-container input[type="checkbox"] {
        display: none;
    }

    .pdp__upsell-container .checkbox__dot {
        flex: 30%;
        max-width: 32px;
        height: 32px;
        border: 2px solid #999;
        display: inline-block;
        position: relative;
        transition: all 0.3s ease;
        background: transparent;
        border-radius: 100%;
        align-self: center;
    }
    .pdp__upsell-container input[type="checkbox"]:checked + label {
        border-color: #307A07;
    
    }
    .pdp__upsell-container input[type="checkbox"]:checked + label .checkbox__dot {
        border-color: #307A07;
        background: #307A07;
        box-shadow: inset 0 0 0 3px #fff;
    }

    .pdp__upsell-container input[type="checkbox"]:checked + label .checkbox__dot::after {
        border-color: #4CAF50;
        opacity: 1;
    }
    @media (max-width: 767px) {
        .pdp__upsell-container .checkbox__dot {
            max-width: 22px;
            height: 22px;
        }
        .pdp__upsell-container input[type="checkbox"]:checked + label .checkbox__dot {
            box-shadow: inset 0 0 0 2px #fff;
        }
    }
    .upsell-soldout {
        cursor: default;
        
    }
{% endstyle %}
<div class="pdp__upsell-container">
    <div class="pdp__upsell-wrapper">
        {% for upsell in product.metafields.product.pdp_upsell.value %}
            <div class="upsell__items-container" js-upsell-items-container>
                <h4 class="h4 upsell__title">Frequently Bought Together</h4>
                {% for prod_uct in upsell.product.value %}
                    <input type="checkbox" name="{{ prod_uct.handle }}" id="{{ prod_uct.handle }}--{{ forloop.index }}" data-variant-available="{{ prod_uct.selected_or_first_available_variant.available }}" data-variant-id="{{ prod_uct.selected_or_first_available_variant.id }}">
                    <label class="upsell__item {% if data-variant-available == false %} upsell-soldout{% endif %}" for="{{ prod_uct.handle }}--{{ forloop.index }}">
                        <div class="img">
                            {{ prod_uct.featured_image | image_url: width: 100, height: 100 | image_tag: class:"upsell__img" }}
                        </div>
                        <div class="info__content">
                            <span class="title">
                                {{ prod_uct.title }}
                            </span>
                            <span class="price">
                                {{ prod_uct.price | money }}
                            </span>
                        </div>
                        <div class="checkbox__dot">
                        </div>
                        {% if prod_uct.selected_or_first_available_variant.available == false %}
                            <span class="upsell__soldout">soldout</span>
                        {% endif %}
                    </label>
                {% endfor %}
            </div>
        {% endfor %}
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const upsellContainers = document.querySelectorAll('[js-upsell-items-container]');

        upsellContainers.forEach(container => {
            const buyButtonBlock = container.closest('[data-block-type="buy-buttons"]');
            if (!buyButtonBlock) return;

            const form = buyButtonBlock.querySelector('product-form form');
            if (!form) return;

            const upsellItems = container.querySelectorAll('input[type="checkbox"]');

            // keep reference to the original main product input (name="id")
            const originalMainInput = form.querySelector('[name="id"]');
            if (!originalMainInput) return;

            function rebuildFormItems() {
                // collect checked upsell variant ids in DOM order
                const checkedVariantIds = Array.from(upsellItems)
                    .filter(cb => cb.checked)
                    .map(cb => cb.dataset.variantId)
                    .filter(Boolean);

                // remove only inputs we generated previously (leave the original main input in DOM)
                form.querySelectorAll('input[data-upsell-generated="true"]').forEach(el => el.remove());

                if (checkedVariantIds.length > 0) {
                    // convert main product input to items[0][id]
                    originalMainInput.setAttribute('name', 'items[0][id]');
                    originalMainInput.setAttribute('data-index', '0');

                    // add quantity input for main product (generated)
                    const mainQty = document.createElement('input');
                    mainQty.type = 'hidden';
                    mainQty.name = 'items[0][quantity]';
                    mainQty.value = '1';
                    mainQty.setAttribute('data-upsell-generated', 'true');
                    mainQty.setAttribute('data-index', '0');
                    form.appendChild(mainQty);

                    // append upsell items with sequential indexes starting at 1 (generated)
                    checkedVariantIds.forEach((variantId, i) => {
                        const index = i + 1;
                        const idInput = document.createElement('input');
                        idInput.type = 'hidden';
                        idInput.name = `items[${index}][id]`;
                        idInput.value = variantId;
                        idInput.setAttribute('data-upsell-generated', 'true');
                        idInput.setAttribute('data-index', String(index));

                        const qtyInput = document.createElement('input');
                        qtyInput.type = 'hidden';
                        qtyInput.name = `items[${index}][quantity]`;
                        qtyInput.value = '1';
                        qtyInput.setAttribute('data-upsell-generated', 'true');
                        qtyInput.setAttribute('data-index', String(index));

                        form.appendChild(idInput);
                        form.appendChild(qtyInput);
                    });
                } else {
                    // no upsells selected -> revert main input back to name="id"
                    originalMainInput.setAttribute('name', 'id');
                    originalMainInput.removeAttribute('data-index');
                }
            }

            // attach listeners
            upsellItems.forEach(cb => cb.addEventListener('change', rebuildFormItems));
        });
    });
</script>